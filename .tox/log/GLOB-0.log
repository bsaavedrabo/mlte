action: GLOB, msg: packaging
cwd: /home/turing/dev/mlte
cmd: /home/turing/dev/mlte/env/bin/python setup.py sdist --formats=zip --dist-dir .tox/dist
WARNING: The wheel package is not available.
running sdist
running egg_info
writing src/mlte.egg-info/PKG-INFO
writing dependency_links to src/mlte.egg-info/dependency_links.txt
writing top-level names to src/mlte.egg-info/top_level.txt
writing manifest file 'src/mlte.egg-info/SOURCES.txt'
running check
creating mlte-0.1.dev3+dirty
creating mlte-0.1.dev3+dirty/docs
creating mlte-0.1.dev3+dirty/src
creating mlte-0.1.dev3+dirty/src/mlte
creating mlte-0.1.dev3+dirty/src/mlte.egg-info
creating mlte-0.1.dev3+dirty/src/mlte/properties
creating mlte-0.1.dev3+dirty/src/mlte/properties/cpu
creating mlte-0.1.dev3+dirty/src/mlte/properties/memory
copying files to mlte-0.1.dev3+dirty...
copying README.md -> mlte-0.1.dev3+dirty
copying pyproject.toml -> mlte-0.1.dev3+dirty
copying setup.py -> mlte-0.1.dev3+dirty
copying docs/ROADMAP.md -> mlte-0.1.dev3+dirty/docs
copying src/mlte/__init__.py -> mlte-0.1.dev3+dirty/src/mlte
copying src/mlte/_version.py -> mlte-0.1.dev3+dirty/src/mlte
copying src/mlte.egg-info/PKG-INFO -> mlte-0.1.dev3+dirty/src/mlte.egg-info
copying src/mlte.egg-info/SOURCES.txt -> mlte-0.1.dev3+dirty/src/mlte.egg-info
copying src/mlte.egg-info/dependency_links.txt -> mlte-0.1.dev3+dirty/src/mlte.egg-info
copying src/mlte.egg-info/not-zip-safe -> mlte-0.1.dev3+dirty/src/mlte.egg-info
copying src/mlte.egg-info/top_level.txt -> mlte-0.1.dev3+dirty/src/mlte.egg-info
copying src/mlte/properties/__init__.py -> mlte-0.1.dev3+dirty/src/mlte/properties
copying src/mlte/properties/property.py -> mlte-0.1.dev3+dirty/src/mlte/properties
copying src/mlte/properties/cpu/__init__.py -> mlte-0.1.dev3+dirty/src/mlte/properties/cpu
copying src/mlte/properties/cpu/process_local_cpu_utilization.py -> mlte-0.1.dev3+dirty/src/mlte/properties/cpu
copying src/mlte/properties/memory/__init__.py -> mlte-0.1.dev3+dirty/src/mlte/properties/memory
copying src/mlte/properties/memory/process_local_memory_consumption.py -> mlte-0.1.dev3+dirty/src/mlte/properties/memory
Writing mlte-0.1.dev3+dirty/setup.cfg
creating '.tox/dist/mlte-0.1.dev3+dirty.zip' and adding 'mlte-0.1.dev3+dirty' to it
adding 'mlte-0.1.dev3+dirty'
adding 'mlte-0.1.dev3+dirty/src'
adding 'mlte-0.1.dev3+dirty/docs'
adding 'mlte-0.1.dev3+dirty/PKG-INFO'
adding 'mlte-0.1.dev3+dirty/setup.py'
adding 'mlte-0.1.dev3+dirty/pyproject.toml'
adding 'mlte-0.1.dev3+dirty/README.md'
adding 'mlte-0.1.dev3+dirty/setup.cfg'
adding 'mlte-0.1.dev3+dirty/src/mlte'
adding 'mlte-0.1.dev3+dirty/src/mlte.egg-info'
adding 'mlte-0.1.dev3+dirty/src/mlte/properties'
adding 'mlte-0.1.dev3+dirty/src/mlte/__init__.py'
adding 'mlte-0.1.dev3+dirty/src/mlte/_version.py'
adding 'mlte-0.1.dev3+dirty/src/mlte/properties/cpu'
adding 'mlte-0.1.dev3+dirty/src/mlte/properties/memory'
adding 'mlte-0.1.dev3+dirty/src/mlte/properties/property.py'
adding 'mlte-0.1.dev3+dirty/src/mlte/properties/__init__.py'
adding 'mlte-0.1.dev3+dirty/src/mlte/properties/cpu/process_local_cpu_utilization.py'
adding 'mlte-0.1.dev3+dirty/src/mlte/properties/cpu/__init__.py'
adding 'mlte-0.1.dev3+dirty/src/mlte/properties/memory/__init__.py'
adding 'mlte-0.1.dev3+dirty/src/mlte/properties/memory/process_local_memory_consumption.py'
adding 'mlte-0.1.dev3+dirty/src/mlte.egg-info/top_level.txt'
adding 'mlte-0.1.dev3+dirty/src/mlte.egg-info/PKG-INFO'
adding 'mlte-0.1.dev3+dirty/src/mlte.egg-info/dependency_links.txt'
adding 'mlte-0.1.dev3+dirty/src/mlte.egg-info/not-zip-safe'
adding 'mlte-0.1.dev3+dirty/src/mlte.egg-info/SOURCES.txt'
adding 'mlte-0.1.dev3+dirty/docs/ROADMAP.md'
removing 'mlte-0.1.dev3+dirty' (and everything under it)
/home/turing/dev/mlte/.eggs/setuptools_scm-6.4.2-py3.8.egg/setuptools_scm/integration.py:17: RuntimeWarning: 
ERROR: setuptools==44.0.0 is used in combination with setuptools_scm>=6.x

Your build configuration is incomplete and previously worked by accident!


This happens as setuptools is unable to replace itself when a activated build dependency
requires a more recent setuptools version
(it does not respect "setuptools>X" in setup_requires).


setuptools>=31 is required for setup.cfg metadata support
setuptools>=42 is required for pyproject.toml configuration support

Suggested workarounds if applicable:
 - preinstalling build dependencies like setuptools_scm before running setup.py
 - installing setuptools_scm using the system package manager to ensure consistency
 - migrating from the deprecated setup_requires mechanism to pep517/518
   and using a pyproject.toml to declare build dependencies
   which are reliably pre-installed before running the build tools

  warnings.warn(
